# <instruction type> <name> <op> <arguments ...>

# R instructions (opcode rs rt rd shift funct)
# format: <type> <name> <op> <funct>

R add 0x00 0x20
R addu 0x00 0x21
R and 0x00 0x24
R div 0x00 0x1a
R divu 0x00 0x1b
R jr 0x00 0x08
R mfhi 0x00 0x10
R mflo 0x00 0x12
R mhc0 0x10 0x00
R mult 0x00 0x18
R multu 0x00 0x19
R nor 0x00 0x27
R xor 0x00 0x26
R or 0x00 0x25
R slt 0x00 0x2a
R sltu 0x00 0x2b
R sll 0x00 0x00
R srl 0x00 0x02
R sra 0x00 0x03
R sub 0x00 0x22
R subu 0x00 0x23

# I instructions (opcode rs rt IMM)
# format: <type> <name> <op>
I addi 0x08
I addiu 0x09
I andi 0x0c
I beq 0x04
I blez 0x06
I bne 0x05
I lbu 0x24
I lhu 0x25
I lui 0x0f
I ori 0x0d
I sb 0x28
I sh 0x29
I slti 0x0a
I sltiu 0x0b
I sw 0x2b

# J instructions (opcode addr)
# format: <type> <name> <op>
J j 0x02
J jal 0x03
