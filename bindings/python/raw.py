from cffi import FFI

ffi = FFI()
ffi.cdef("bool arm_adc(condition, void**);")
ffi.cdef("bool arm_add(condition, void**);")
ffi.cdef("bool arm_and(condition, void**);")
ffi.cdef("bool arm_eor(condition, void**);")
ffi.cdef("bool arm_orr(condition, void**);")
ffi.cdef("bool arm_rsb(condition, void**);")
ffi.cdef("bool arm_rsc(condition, void**);")
ffi.cdef("bool arm_sbc(condition, void**);")
ffi.cdef("bool arm_sub(condition, void**);")
ffi.cdef("bool arm_bkpt(void**);")
ffi.cdef("bool arm_b(condition, void**);")
ffi.cdef("bool arm_bic(condition, void**);")
ffi.cdef("bool arm_blx(condition, void**);")
ffi.cdef("bool arm_bx(condition, void**);")
ffi.cdef("bool arm_bxj(condition, void**);")
ffi.cdef("bool arm_blxun(void**);")
ffi.cdef("bool arm_cdp(condition, void**);")
ffi.cdef("bool arm_clz(condition, void**);")
ffi.cdef("bool arm_cmn(condition, void**);")
ffi.cdef("bool arm_cmp(condition, void**);")
ffi.cdef("bool arm_cpy(condition, void**);")
ffi.cdef("bool arm_cps(void**);")
ffi.cdef("bool arm_cpsie(void**);")
ffi.cdef("bool arm_cpsid(void**);")
ffi.cdef("bool arm_cpsie_mode(void**);")
ffi.cdef("bool arm_cpsid_mode(void**);")
ffi.cdef("bool arm_ldc(condition, bool, void**);")
ffi.cdef("bool arm_ldm1(condition, bool, void**);")
ffi.cdef("bool arm_ldm2(condition, void**);")
ffi.cdef("bool arm_ldm3(condition, bool, void**);")
ffi.cdef("bool arm_ldr(condition, bool, void**);")
ffi.cdef("bool arm_ldrb(condition, bool, void**);")
ffi.cdef("bool arm_ldrbt(condition, void**);")
ffi.cdef("bool arm_ldrd(condition, bool, void**);")
ffi.cdef("bool arm_ldrex(condition, void**);")
ffi.cdef("bool arm_ldrh(condition, bool, void**);")
ffi.cdef("bool arm_ldrsb(condition, bool, void**);")
ffi.cdef("bool arm_ldrsh(condition, bool, void**);")
ffi.cdef("bool arm_ldrt(condition, void**);")
ffi.cdef("bool arm_mcr(condition, void**);")
ffi.cdef("bool arm_mcrr(condition, void**);")
ffi.cdef("bool arm_mla(condition, void**);")
ffi.cdef("bool arm_mov(condition, void**);")
ffi.cdef("bool arm_mrc(condition, void**);")
ffi.cdef("bool arm_mrrc(condition, void**);")
ffi.cdef("bool arm_mrs(condition, void**);")
ffi.cdef("bool arm_mul(condition, void**);")
ffi.cdef("bool arm_mvn(condition, void**);")
ffi.cdef("bool arm_msr_imm(condition, void**);")
ffi.cdef("bool arm_msr_reg(condition, void**);")
ffi.cdef("bool arm_pkhbt(condition, void**);")
ffi.cdef("bool arm_pkhtb(condition, void**);")
ffi.cdef("bool arm_pld(void**);")
ffi.cdef("bool arm_qadd(condition, void**);")
ffi.cdef("bool arm_qadd16(condition, void**);")
ffi.cdef("bool arm_qadd8(condition, void**);")
ffi.cdef("bool arm_qaddsubx(condition, void**);")
ffi.cdef("bool arm_qdadd(condition, void**);")
ffi.cdef("bool arm_qdsub(condition, void**);")
ffi.cdef("bool arm_qsub(condition, void**);")
ffi.cdef("bool arm_qsub16(condition, void**);")
ffi.cdef("bool arm_qsub8(condition, void**);")
ffi.cdef("bool arm_qsubaddx(condition, void**);")
ffi.cdef("bool arm_rev(condition, void**);")
ffi.cdef("bool arm_rev16(condition, void**);")
ffi.cdef("bool arm_revsh(condition, void**);")
ffi.cdef("bool arm_rfe(bool, void**);")
ffi.cdef("bool arm_sadd16(condition, void**);")
ffi.cdef("bool arm_sadd8(condition, void**);")
ffi.cdef("bool arm_saddsubx(condition, void**);")
ffi.cdef("bool arm_sel(condition, void**);")
ffi.cdef("bool arm_setendbe(void**);")
ffi.cdef("bool arm_setendle(void**);")
ffi.cdef("bool arm_shadd16(condition, void**);")
ffi.cdef("bool arm_shadd8(condition, void**);")
ffi.cdef("bool arm_shaddsubx(condition, void**);")
ffi.cdef("bool arm_shsub16(condition, void**);")
ffi.cdef("bool arm_shsub8(condition, void**);")
ffi.cdef("bool arm_shsubaddx(condition, void**);")
ffi.cdef("bool arm_smlabb(condition, void**);")
ffi.cdef("bool arm_smlabt(condition, void**);")
ffi.cdef("bool arm_smlatb(condition, void**);")
ffi.cdef("bool arm_smlatt(condition, void**);")
ffi.cdef("bool arm_smlad(condition, void**);")
ffi.cdef("bool arm_smlal(condition, void**);")
ffi.cdef("bool arm_smlalbb(condition, void**);")
ffi.cdef("bool arm_smlalbt(condition, void**);")
ffi.cdef("bool arm_smlaltb(condition, void**);")
ffi.cdef("bool arm_smlaltt(condition, void**);")
ffi.cdef("bool arm_smlald(condition, void**);")
ffi.cdef("bool arm_smlawb(condition, void**);")
ffi.cdef("bool arm_smlawt(condition, void**);")
ffi.cdef("bool arm_smlsd(condition, void**);")
ffi.cdef("bool arm_smlsld(condition, void**);")
ffi.cdef("bool arm_smmla(condition, void**);")
ffi.cdef("bool arm_smmls(condition, void**);")
ffi.cdef("bool arm_smmul(condition, void**);")
ffi.cdef("bool arm_smuad(condition, void**);")
ffi.cdef("bool arm_smulbb(condition, void**);")
ffi.cdef("bool arm_smulbt(condition, void**);")
ffi.cdef("bool arm_smultb(condition, void**);")
ffi.cdef("bool arm_smultt(condition, void**);")
ffi.cdef("bool arm_smull(condition, void**);")
ffi.cdef("bool arm_smulwb(condition, void**);")
ffi.cdef("bool arm_smulwt(condition, void**);")
ffi.cdef("bool arm_smusd(condition, void**);")
ffi.cdef("bool arm_srs(bool, void**);")
ffi.cdef("bool arm_ssat(condition, void**);")
ffi.cdef("bool arm_ssat16(condition, void**);")
ffi.cdef("bool arm_ssub16(condition, void**);")
ffi.cdef("bool arm_ssub8(condition, void**);")
ffi.cdef("bool arm_ssubaddx(condition, void**);")
ffi.cdef("bool arm_stc(condition, bool, void**);")
ffi.cdef("bool arm_stm1(condition, bool, void**);")
ffi.cdef("bool arm_stm2(condition, void**);")
ffi.cdef("bool arm_str(condition, bool, void**);")
ffi.cdef("bool arm_strb(condition, bool, void**);")
ffi.cdef("bool arm_strbt(condition, void**);")
ffi.cdef("bool arm_strd(condition, bool, void**);")
ffi.cdef("bool arm_strex(condition, void**);")
ffi.cdef("bool arm_strh(condition, bool, void**);")
ffi.cdef("bool arm_strt(condition, void**);")
ffi.cdef("bool arm_swi(condition, void**);")
ffi.cdef("bool arm_swp(condition, void**);")
ffi.cdef("bool arm_swpb(condition, void**);")
ffi.cdef("bool arm_sxtab(condition, void**);")
ffi.cdef("bool arm_sxtab16(condition, void**);")
ffi.cdef("bool arm_sxtah(condition, void**);")
ffi.cdef("bool arm_sxtb(condition, void**);")
ffi.cdef("bool arm_sxtb16(condition, void**);")
ffi.cdef("bool arm_sxth(condition, void**);")
ffi.cdef("bool arm_teq(condition, void**);")
ffi.cdef("bool arm_tst(condition, void**);")
ffi.cdef("bool arm_uadd16(condition, void**);")
ffi.cdef("bool arm_uadd8(condition, void**);")
ffi.cdef("bool arm_uaddsubx(condition, void**);")
ffi.cdef("bool arm_uhadd16(condition, void**);")
ffi.cdef("bool arm_uhadd8(condition, void**);")
ffi.cdef("bool arm_uhaddsubx(condition, void**);")
ffi.cdef("bool arm_uhsub16(condition, void**);")
ffi.cdef("bool arm_uhsub8(condition, void**);")
ffi.cdef("bool arm_uhsubaddx(condition, void**);")
ffi.cdef("bool arm_umaal(condition, void**);")
ffi.cdef("bool arm_umlal(condition, void**);")
ffi.cdef("bool arm_umull(condition, void**);")
ffi.cdef("bool arm_uqadd16(condition, void**);")
ffi.cdef("bool arm_uqadd8(condition, void**);")
ffi.cdef("bool arm_uqaddsubx(condition, void**);")
ffi.cdef("bool arm_uqsub16(condition, void**);")
ffi.cdef("bool arm_uqsub8(condition, void**);")
ffi.cdef("bool arm_uqsubaddx(condition, void**);")
ffi.cdef("bool arm_usad8(condition, void**);")
ffi.cdef("bool arm_usada8(condition, void**);")
ffi.cdef("bool arm_usat(condition, void**);")
ffi.cdef("bool arm_usat16(condition, void**);")
ffi.cdef("bool arm_usub16(condition, void**);")
ffi.cdef("bool arm_usub8(condition, void**);")
ffi.cdef("bool arm_usubaddx(condition, void**);")
ffi.cdef("bool arm_uxtab(condition, void**);")
ffi.cdef("bool arm_uxtab16(condition, void**);")
ffi.cdef("bool arm_uxtah(condition, void**);")
ffi.cdef("bool arm_uxtb(condition, void**);")
ffi.cdef("bool arm_uxtb16(condition, void**);")
ffi.cdef("bool arm_uxth(condition, void**);")
