from cffi import FFI

armbuilder = FFI()

armbuilder.cdef("int adc(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int add(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int and(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int eor(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int orr(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int rsb(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int rsc(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int sbc(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int sub(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int bkpt(void**);")
armbuilder.cdef("int b(unsigned char, void**);")
armbuilder.cdef("int bic(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int blx(unsigned char, void**);")
armbuilder.cdef("int bx(unsigned char, void**);")
armbuilder.cdef("int bxj(unsigned char, void**);")
armbuilder.cdef("int blxun(void**);")
armbuilder.cdef("int cdp(unsigned char, void**);")
armbuilder.cdef("int clz(unsigned char, unsigned char, void**);")
armbuilder.cdef("int cmn(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int cmp(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int cpy(unsigned char, unsigned char, void**);")
armbuilder.cdef("int cps(unsigned char, void**);")
armbuilder.cdef("int cpsie(void**);")
armbuilder.cdef("int cpsid(void**);")
armbuilder.cdef("int cpsie_mode(unsigned char, void**);")
armbuilder.cdef("int cpsid_mode(unsigned char, void**);")
armbuilder.cdef("int ldc(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldm1(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldm2(unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldm3(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldr(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldrb(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldrbt(unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldrd(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldrex(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldrh(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldrsb(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldrsh(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ldrt(unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int mcr(unsigned char, unsigned char, void**);")
armbuilder.cdef("int mcrr(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int mla(unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int mov(unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int mrc(unsigned char, unsigned char, void**);")
armbuilder.cdef("int mrrc(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int mrs(unsigned char, unsigned char, void**);")
armbuilder.cdef("int mul(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int mvn(unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int msr_imm(unsigned char, void**);")
armbuilder.cdef("int msr_reg(unsigned char, void**);")
armbuilder.cdef("int pkhbt(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int pkhtb(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int pld(unsigned char, unsigned char, void**);")
armbuilder.cdef("int qadd(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int qadd16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int qadd8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int qaddsubx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int qdadd(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int qdsub(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int qsub(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int qsub16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int qsub8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int qsubaddx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int rev(unsigned char, unsigned char, void**);")
armbuilder.cdef("int rev16(unsigned char, unsigned char, void**);")
armbuilder.cdef("int revsh(unsigned char, unsigned char, void**);")
armbuilder.cdef("int rfe(unsigned char, unsigned char, void**);")
armbuilder.cdef("int sadd16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int sadd8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int saddsubx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int sel(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int setendbe(void**);")
armbuilder.cdef("int setendle(void**);")
armbuilder.cdef("int shadd16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int shadd8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int shaddsubx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int shsub16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int shsub8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int shsubaddx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int smlabb(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int smlabt(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int smlatb(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int smlatt(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int smlad(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int smlal(unsigned char, unsigned char, void**);")
armbuilder.cdef("int smlalbb(unsigned char, void**);")
armbuilder.cdef("int smlalbt(unsigned char, void**);")
armbuilder.cdef("int smlaltb(unsigned char, void**);")
armbuilder.cdef("int smlaltt(unsigned char, void**);")
armbuilder.cdef("int smlald(unsigned char, void**);")
armbuilder.cdef("int smlawb(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int smlawt(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int smlsd(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int smlsld(unsigned char, void**);")
armbuilder.cdef("int smmla(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int smmls(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int smmul(unsigned char, unsigned char, void**);")
armbuilder.cdef("int smuad(unsigned char, unsigned char, void**);")
armbuilder.cdef("int smulbb(unsigned char, unsigned char, void**);")
armbuilder.cdef("int smulbt(unsigned char, unsigned char, void**);")
armbuilder.cdef("int smultb(unsigned char, unsigned char, void**);")
armbuilder.cdef("int smultt(unsigned char, unsigned char, void**);")
armbuilder.cdef("int smull(unsigned char, unsigned char, void**);")
armbuilder.cdef("int smulwb(unsigned char, unsigned char, void**);")
armbuilder.cdef("int smulwt(unsigned char, unsigned char, void**);")
armbuilder.cdef("int smusd(unsigned char, unsigned char, void**);")
armbuilder.cdef("int srs(unsigned char, unsigned char, void**);")
armbuilder.cdef("int ssat(unsigned char, unsigned char, void**);")
armbuilder.cdef("int ssat16(unsigned char, unsigned char, void**);")
armbuilder.cdef("int ssub16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ssub8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int ssubaddx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int stc(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int stm1(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int stm2(unsigned char, unsigned char, void**);")
armbuilder.cdef("int str(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int strb(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int strbt(unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int strd(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int strex(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int strh(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int strt(unsigned char, unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int swi(unsigned char, void**);")
armbuilder.cdef("int swp(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int swpb(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int sxtab(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int sxtab16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int sxtah(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int sxtb(unsigned char, unsigned char, void**);")
armbuilder.cdef("int sxtb16(unsigned char, unsigned char, void**);")
armbuilder.cdef("int sxth(unsigned char, unsigned char, void**);")
armbuilder.cdef("int teq(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int tst(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uadd16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uadd8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uaddsubx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uhadd16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uhadd8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uhaddsubx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uhsub16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uhsub8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uhsubaddx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int umaal(unsigned char, void**);")
armbuilder.cdef("int umlal(unsigned char, unsigned char, void**);")
armbuilder.cdef("int umull(unsigned char, unsigned char, void**);")
armbuilder.cdef("int uqadd16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uqadd8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uqaddsubx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uqsub16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uqsub8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uqsubaddx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int usad8(unsigned char, unsigned char, void**);")
armbuilder.cdef("int usada8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int usat(unsigned char, unsigned char, void**);")
armbuilder.cdef("int usat16(unsigned char, unsigned char, void**);")
armbuilder.cdef("int usub16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int usub8(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int usubaddx(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uxtab(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uxtab16(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uxtah(unsigned char, unsigned char, unsigned char, void**);")
armbuilder.cdef("int uxtb(unsigned char, unsigned char, void**);")
armbuilder.cdef("int uxtb16(unsigned char, unsigned char, void**);")
armbuilder.cdef("int uxth(unsigned char, unsigned char, void**);")

def loadarm(libpath = "asmdot"): return armbuilder.dlopen(libpath)

